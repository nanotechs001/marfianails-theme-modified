{%- assign per_row = section.settings.per_row -%}
{%- assign product_limit = per_row | times: section.settings.rows -%}
{%- assign collection = collections[section.settings.home_featured_products] -%}

{% if section.settings.divider %}<div class="section--divider">{% endif %}

<div
  id="CollectionSection-{{ section.id }}"
  data-section-id="{{ section.id }}"
  data-section-type="collection-template">
  {% if section.settings.title != blank %}
    <div class="page-width">
      <div class="section-header{% if section.settings.view_all %}{% unless settings.type_headers_align_text %} section-header--with-link{% endunless %}{% endif %}">
        <h2 class="section-header__title">
          {{ section.settings.title }}
        </h2>
      </div>
    </div>
  {% endif %}

  <div class="page-width-collections-slider">
    <div class="featured-collection-carousel" data-carousel>
      <div class="featured-collection-carousel__wrapper">
        {% if section.settings.home_featured_products == blank or collections[section.settings.home_featured_products].empty? or collections[section.settings.home_featured_products].products_count == 0 %}
          {% unless emptyState %}
            {%- assign emptyState = true -%}
          {% endunless %}

          {% for i in (1..product_limit) %}
            <div class="featured-collection-carousel__item">
              <div class="grid-product__content">
                <a href="{{ product.url | within: collection }}" class="grid-product__link {% if sold_out %} grid-product__link--disabled{% endif %}">
                  <div class="grid-product__image-mask">
                    {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                    <div class="image-wrap">{{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}</div>
                  </div>
                  <div class="grid-product__meta">
                    <div class="grid-product__title">{{ 'home_page.onboarding.product_title' | t }}</div>
                    <div class="grid-product__price">$29</div>
                  </div>
                </a>
              </div>
            </div>
          {% endfor %}
        {% else %}
          {% for product in collections[section.settings.home_featured_products].products limit: product_limit %}
            <div class="featured-collection-carousel__item">
              {% include 'product-grid-item' %}
            </div>
          {% endfor %}
        {% endif %}
      </div>
      
      <button class="featured-collection-carousel__prev" aria-label="{{ 'general.slider.previous_slide' | t }}">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-left" viewBox="0 0 284.929 284.929"><path d="M282.082 76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856-2.471 0-4.661.95-6.563 2.856L142.466 174.441 30.262 62.241c-1.903-1.906-4.093-2.856-6.567-2.856-2.475 0-4.665.95-6.567 2.856L2.856 76.515C.95 78.417 0 80.607 0 83.082c0 2.473.953 4.663 2.856 6.565l133.043 133.046c1.902 1.903 4.093 2.854 6.567 2.854s4.661-.951 6.562-2.854l133.054-133.046c1.902-1.903 2.847-4.093 2.847-6.565 0-2.475-.944-4.665-2.847-6.567z"/></svg>
      </button>
      <button class="featured-collection-carousel__next" aria-label="{{ 'general.slider.next_slide' | t }}">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-right" viewBox="0 0 284.929 284.929"><path d="M282.082 76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856-2.471 0-4.661.95-6.563 2.856L142.466 174.441 30.262 62.241c-1.903-1.906-4.093-2.856-6.567-2.856-2.475 0-4.665.95-6.567 2.856L2.856 76.515C.95 78.417 0 80.607 0 83.082c0 2.473.953 4.663 2.856 6.565l133.043 133.046c1.902 1.903 4.093 2.854 6.567 2.854s4.661-.951 6.562-2.854l133.054-133.046c1.902-1.903 2.847-4.093 2.847-6.565 0-2.475-.944-4.665-2.847-6.567z"/></svg>
      </button>
    </div>
  </div>
</div>

{% if settings.quick_shop_enable %}
  {% for product in collections[section.settings.home_featured_products].products limit: product_limit %}
    {% include 'quick-shop-modal' %}
  {% endfor %}
{% endif %}

{% if section.settings.divider %}</div>{% endif %}

<style>
.featured-collection-carousel {
  position: relative;
  margin: 0 -10px;
  padding: 0 40px;
  padding-bottom:40px;
}

.featured-collection-carousel__wrapper {
  display: flex;
  overflow-x: hidden;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}

.featured-collection-carousel__item {
  flex: 0 0 calc(100% / {{ section.settings.display_per_row }});
  padding: 0 10px;
  min-width: calc(100% / {{ section.settings.display_per_row }});
}

.featured-collection-carousel__prev,
.featured-collection-carousel__next {
  position: absolute;
  top: 40%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.9);
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  z-index: 1;
}

.featured-collection-carousel__prev {
  left: 22px;
}

.featured-collection-carousel__next {
  right: 22px;
}

.featured-collection-carousel__prev .icon,
.featured-collection-carousel__next .icon {
  width: 20px;
  height: 20px;
}

.featured-collection-carousel__prev .icon {
  transform: rotate(180deg);
}

.medium-up--one-quarter {
  width: 100%;
}

button.featured-collection-carousel__prev {
  transform: rotate(-90deg);
}

button.featured-collection-carousel__next {
  transform: rotate(-90deg);
}

@media screen and (max-width: 769px) {
  .featured-collection-carousel__item {
        flex: 0 0 50%;
        min-width: 50%;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const carousels = document.querySelectorAll('[data-carousel]');
  
  carousels.forEach(carousel => {
    const wrapper = carousel.querySelector('.featured-collection-carousel__wrapper');
    const prevBtn = carousel.querySelector('.featured-collection-carousel__prev');
    const nextBtn = carousel.querySelector('.featured-collection-carousel__next');
    const itemWidth = wrapper.querySelector('.featured-collection-carousel__item').offsetWidth;
    
    let isDragging = false;
    let startPos = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;
    let animationID = 0;
    let hasMoved = false;
    let startTime = 0;

    // Touch events
    wrapper.addEventListener('touchstart', dragStart);
    wrapper.addEventListener('touchmove', drag);
    wrapper.addEventListener('touchend', dragEnd);

    // Mouse events
    wrapper.addEventListener('mousedown', dragStart);
    wrapper.addEventListener('mousemove', drag);
    wrapper.addEventListener('mouseup', dragEnd);
    wrapper.addEventListener('mouseleave', dragEnd);

    // Prevent clicks on links when dragging
    wrapper.addEventListener('click', function(e) {
      if (isDragging || hasMoved) {
        e.preventDefault();
        e.stopPropagation();
      }
    }, true);

    function dragStart(event) {
      startPos = getPositionX(event);
      isDragging = true;
      hasMoved = false;
      startTime = Date.now();
      animationID = requestAnimationFrame(animation);
      wrapper.style.cursor = 'grabbing';
      wrapper.style.scrollBehavior = 'auto';
    }

    function drag(event) {
      if (!isDragging) return;
      const currentPosition = getPositionX(event);
      const diff = currentPosition - startPos;
      wrapper.scrollLeft = prevTranslate - diff;
      hasMoved = true;
    }

    function dragEnd(event) {
      isDragging = false;
      cancelAnimationFrame(animationID);
      wrapper.style.cursor = 'grab';
      wrapper.style.scrollBehavior = 'smooth';
      prevTranslate = wrapper.scrollLeft;

      // If the drag was very quick (less than 200ms) and we moved, it was probably a drag
      if (Date.now() - startTime < 200 && hasMoved) {
        event.preventDefault();
        event.stopPropagation();
      }
    }

    function getPositionX(event) {
      return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
    }

    function animation() {
      if (isDragging) requestAnimationFrame(animation);
    }

    // Prevent default drag behaviors
    wrapper.addEventListener('dragstart', (e) => e.preventDefault());
    
    // Add grab cursor
    wrapper.style.cursor = 'grab';
    
    prevBtn.addEventListener('click', () => {
      wrapper.scrollBy({
        left: -itemWidth,
        behavior: 'smooth'
      });
    });
    
    nextBtn.addEventListener('click', () => {
      wrapper.scrollBy({
        left: itemWidth,
        behavior: 'smooth'
      });
    });
  });
});
</script>

{% schema %}
  {
    "name": "Featured collection",
    "class": "index-section",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Featured collection"
      },
      {
        "type": "collection",
        "id": "home_featured_products",
        "label": "Collection"
      },
      {
        "type": "range",
        "id": "per_row",
        "label": "Total of Products to display",
        "default": 4,
        "min": 1,
        "max": 20,
        "step": 1
      },
      {
        "type": "range",
        "id": "display_per_row",
        "label": "Products Display per row",
        "default": 4,
        "min": 1,
        "max": 20,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "divider",
        "label": "Show section divider",
        "default": false
      },
      {
        "type": "text",
        "id": "rows",
        "label": "Rows of products",
        "default": "1",
      },
    ],
    "presets": [{
      "name": "Featured collection",
      "category": "Collection"
    }],
    "blocks" : []
  }
{% endschema %}
